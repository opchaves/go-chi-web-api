// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package model

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateToken(ctx context.Context, arg CreateTokenParams) (*Token, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (*User, error)
	CreateWorkspace(ctx context.Context, arg CreateWorkspaceParams) (*Workspace, error)
	DeleteTokenByID(ctx context.Context, id uuid.UUID) error
	GetToken(ctx context.Context, token string) (*Token, error)
	GetTokenById(ctx context.Context, id uuid.UUID) (*Token, error)
	GetTokensByUser(ctx context.Context, userID uuid.UUID) ([]*Token, error)
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	GetUserById(ctx context.Context, id uuid.UUID) (*User, error)
	GetUsers(ctx context.Context) ([]*User, error)
	GetWorkspacesByUser(ctx context.Context, arg GetWorkspacesByUserParams) ([]*Workspace, error)
	IsEmailTaken(ctx context.Context, email string) (int32, error)
	UpdateToken(ctx context.Context, arg UpdateTokenParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (*User, error)
}

var _ Querier = (*Queries)(nil)
